<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link href="/miniui/themes/default/miniui.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        body {
            padding-top: 60px;
            padding-bottom: 40px;
        }
    </style>
    <link href="stylesheets/bootstrap-responsive.css" rel="stylesheet">
</head>
<body>
<div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </a>
            <a class="brand" href="/">tools</a>

            <div class="nav-collapse">
                <ul class="nav">
                    <li><a href="/">首页</a></li>
                    <li><a href=<%= link %> ><%= link_show %></a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<h4>选择版本</h4>
<input id="combo1" class="mini-combobox" style="width:150px;" textField="text" valueField="id" emptyText="1.0.0"
       data ="<%= versions %>" value="cn" required="true" allowInput="true" showNullItem="true" nullItemText="请选择..."/>

<h4>选择渠道</h4>
<input id="combo2" class="mini-combobox" style="width:150px;" textField="text"  emptyText="template"
       data ="<%= channels %>" value="cn" required="true" allowInput="true" showNullItem="true" nullItemText="请选择..."
       valuechanged="onValueChanged"
       onvalidation="onComboValidation"
        />
<a class="mini-button " plain="true" iconCls="icon-add" onclick="onShow">显示</a>
<a class="mini-button " plain="true" iconCls="icon-add" onclick="onAdd">添加</a>
<a class="mini-button" plain="true" iconCls="icon-remove" onclick="onDel">删除</a>
<a class="mini-button" plain="true" iconCls="icon-remove" onclick="onSave">保存</a>
<br /><br />

<textarea id="text_area_config" class="mini-textarea" class="auto_textarea"  style="width:800px;height:300px;"  value="<%= activity %>"  emptyText="{config}"></textarea>
<br /><br />

<textarea id="text_area_log" class="mini-textarea" class="auto_textarea"  style="width:800px;height:300px;"  value="ok"  emptyText="{config}"></textarea>
<br /><br />

<div id="container" class="container">
    <hr/>
    <footer>
        <p><a href="http://blog.chinaunix.net/uid/8625039.html" target="_blank">King Lee</a> 2014</p>
    </footer>
</div>
</body>

<script type="text/javascript">
    mini.parse();
    function onVersionClick(e) {
        $.ajax({
            url : "/save",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                target:"target"
            },
            success : function(json) {
                if(json){
                    alert("ok");
                }else{
                    alert("error");
                }
            }
        });
    }

    function onAdd(e) {
        var obj = mini.get("combo1");
        obj.setValue("usa");

        var button = e.sender;
        var iconCls = button.getIconCls();
        var text = button.getText();
        if (iconCls) {
            alert("text2: " + text + "\nicon: " + iconCls);
        } else {
            alert(text);
        }
    }

    function onDel(e) {
        var obj = mini.get("combo1");
        obj.setValue("usa");

        var button = e.sender;
        var iconCls = button.getIconCls();
        var text = button.getText();
        if (iconCls) {
            alert("text2: " + text + "\nicon: " + iconCls);
        } else {
            alert(text);
        }
    }

    function onValueChanged(e) {
        alert("value changed,not called, why?");
    }

    function onComboValidation(e) {
        var comno2 = mini.get("combo2");
        var value1 = comno1.getValue();
        var value2 = comno2.getText();
    }
    function onShow(){
        var comno1 = mini.get("combo1");
        var comno2 = mini.get("combo2");
        var version = comno1.getText();
        var channel = comno2.getText();
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"show",
                version:version,
                channel:channel
            },
            success : function(result) {
                if(result){
                    var text_area_config = mini.get("text_area_config");
                    var text_area_log = mini.get("text_area_log");
                    switch (result.code)
                    {
                        case 200:
                            if(1){
                                text_area_config.setValue(result.activity);
                            }
                            else{
                                var text_area_config_show_json = jsonToStr(result.activity, null, '\t');
                                $("#text_area_config")['0'].value = text_area_config_show_json;
                            }
                            text_area_log.setValue("ok");
                            break;
                        case 201:
                            text_area_log.setValue("error code:201,param error");
                            break;
                    }
                }else{
                    alert("error");
                }
            }
        });
    }

    function onSave(e) {

        var comno1 = mini.get("combo1");
        var comno2 = mini.get("combo2");
        var version = comno1.getText();
        var channel = comno2.getText();
        var text_area_config = mini.get("text_area_config");
        var text_area_log = mini.get("text_area_log");
        var config = text_area_config.getValue();
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"save",
                version:version,
                channel:channel,
                config:config
            },
            success : function(result) {
                if(result){
                    switch (result.code)
                    {
                        case 200:
                            text_area_log.setValue("ok");
                            break;
                        case 201:
                            text_area_log.setValue("format error");
                            break;
                        case 202:
                            text_area_log.setValue("redis error");
                            break;
                    }
                }else{
                    alert("error");
                }
            }
        });
    }

    function j(a, b) {
        var c, d, g, k, l = e,
                m, n = b[a];
        n && typeof n == "object" && typeof n.toJSON == "function" && (n = n.toJSON(a));
        typeof h == "function" && (n = h.call(b, a, n));
        switch (typeof n) {
            case "string":
                return i(n);
            case "number":
                return isFinite(n) ? String(n) : "null";
            case "boolean":
            case "null":
                return String(n);
            case "object":
                if (!n) return "null";
                e += f;
                m = [];
                if (Object.prototype.toString.apply(n) === "[object Array]") {
                    k = n.length;
                    for (c = 0; c < k; c += 1) m[c] = j(c, n) || "null";
                    g = m.length === 0 ? "[]" : e ? "[\n" + e + m.join(",\n" + e) + "\n" + l + "]" : "[" + m.join(",") + "]";
                    e = l;
                    return g
                }
                if (h && typeof h == "object") {
                    k = h.length;
                    for (c = 0; c < k; c += 1) {
                        d = h[c];
                        if (typeof d == "string") {
                            g = j(d, n);
                            g && m.push(i(d) + (e ? ": " : ":") + g)
                        }
                    }
                } else
                    for (d in n)
                        if (Object.hasOwnProperty.call(n, d)) {
                            g = j(d, n);
                            g && m.push(i(d) + (e ? ": " : ":") + g)
                        } g = m.length === 0 ? "{}" : e ? "{\n" + e + m.join(",\n" + e) + "\n" + l + "}" : "{" + m.join(",") + "}";
                e = l;
                return g
        }
    }

    function i(a) {
        d.lastIndex = 0;
        return d.test(a) ? '"' + a.replace(d, function(a) {
            var b = g[a];
            return typeof b == "string" ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + a + '"'
    }

    function b(a) {
        return a < 10 ? "0" + a : a
    }
    if (typeof Date.prototype.toJSON != "function") {
        Date.prototype.toJSON = function(a) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + b(this.getUTCMonth() + 1) + "-" + b(this.getUTCDate()) + "T" + b(this.getUTCHours()) + ":" + b(this.getUTCMinutes()) + ":" + b(this.getUTCSeconds()) + "Z" : null
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(a) {
            return this.valueOf()
        }
    }
    var c = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            d = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            e, f, g = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            }, h;
    var jsonToStr = function(a, b, c) {
        var d;
        e = "";
        f = "";
        if (typeof c == "number")
            for (d = 0; d < c; d += 1) f += " ";
        else typeof c == "string" && (f = c);
        h = b;
        if (!b || typeof b == "function" || typeof b == "object" && typeof b.length == "number") return j("", {
            "": a
        });
        throw new Error("JSON.stringify")
    }
</script>

<script src="/javascripts/jquery.js"></script>
<script src="/miniui/miniui.js" type="text/javascript"></script>
</html>
