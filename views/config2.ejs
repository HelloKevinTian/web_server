<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link href="/miniui/themes/default/miniui.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        body {
            padding-top: 60px;
            padding-bottom: 40px;
        }
    </style>
    <link href="stylesheets/bootstrap-responsive.css" rel="stylesheet">
</head>
<body>
<div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </a>
            <a class="brand" href="/">tools</a>

            <div class="nav-collapse">
                <ul class="nav">
                    <li><a href="/">首页</a></li>
                    <li><a href=<%= link %> ><%= link_show %></a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<h4>选择版本</h4>
<input id="combo1" class="mini-combobox" style="width:150px;" textField="text" valueField="id"
       data ="<%= versions %>" value="cn" required="true" allowInput="true" showNullItem="true" nullItemText="请选择..."/>

<h4>选择渠道</h4>
<input id="combo2" class="mini-combobox" style="width:150px;" textField="text"
       data ="<%= channels %>" value="cn" required="true" allowInput="true" showNullItem="true" nullItemText="请选择..."
       onvaluechanged="onValueChanged"
       onvalidation="onComboValidation"/>

<a class="mini-button " plain="true" iconCls="icon-add" onclick="onAdd">添加</a>
<a class="mini-button" plain="true" iconCls="icon-remove" onclick="onDel">删除</a>
<a class="mini-button" plain="true" iconCls="icon-remove" onclick="onSave">保存</a>
<a class="mini-button" plain="true" iconCls="icon-remove" onclick="onCheck">验证</a>
<br /><br />
<a
    <textarea id="text_area_config" class="mini-textarea"  style="width:1200px;height:400px;"  value="please choose version and channel"  emptyText="{config}"></textarea>
    <br /><br />
</a>
<a
    <textarea id="text_area_config_json" class="mini-textarea"  style="width:400px;height:400px;"  value=""  emptyText="{config}"></textarea>
    <br /><br />
</a>
    <textarea id="text_area_log" class="mini-textarea" class="auto_textarea"  style="width:1605px;height:100px;"  value="ok"  emptyText="{config}"></textarea>
    <br /><br />

<div id="container" class="container">
    <hr/>
    <footer>
        <p><a href="http://blog.chinaunix.net/uid/8625039.html" target="_blank">King Lee</a> 2014</p>
    </footer>
</div>
</body>

<script type="text/javascript">
    function onVersionClick(e) {
        $.ajax({
            url : "/save",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                target:"target"
            },
            success : function(json) {
                if(json){
                    alert("ok");
                }else{
                    alert("error");
                }
            }
        });
    }

    function onAdd(e) {
        var new_version = mini.get("combo1").getText();
        var new_channel = mini.get("combo2").getText();
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"add",
                version:new_version,
                channel:new_channel
            },
            success : function(result) {
                if(result){
                    switch (result.code)
                    {
                        case 200:
                            mini.get("text_area_log").setValue("add config ok");
                            break;
                        case 202:
                            mini.get("text_area_log").setValue("add config error");
                            break;
                    }
                }else{
                    text_area_log.setValue("add config error");
                }
            }
        });
    }

    function onDel(e) {
        var version = mini.get("combo1").getText();
        var channel = mini.get("combo2").getText();
        if(version == "0.0.0" && channel == "template"){
            mini.get("text_area_log").setValue("error,default template cann't be delete");
            return;
        }
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"del",
                version:version,
                channel:channel
            },
            success : function(result) {
                if(result){
                    switch (result.code)
                    {
                        case 200:
                            mini.get("text_area_log").setValue("del config ok");
                            mini.get("text_area_config").setValue("");
                            mini.get("text_area_config_json").setValue("");
                            break;
                        case 202:
                            mini.get("text_area_log").setValue("del config error");
                            break;
                    }
                }else{
                    text_area_log.setValue("del config error");
                }
            }
        });
    }

    function onValueChanged(e) {
        onShow();
    }

    function onComboValidation(e) {

    }
    function onShow(){
        var version = mini.get("combo1").getText();
        var channel = mini.get("combo2").getText();
        var text_area_config = mini.get("text_area_config");
        var text_area_config_json = mini.get("text_area_config_json");
        var text_area_log = mini.get("text_area_log");
        if("" == version || "" == channel){
            text_area_log.setValue("param error, please choose version and channel again");
            text_area_config.setValue("");
            text_area_config_json.setValue("");
            return;
        }
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"show",
                version:version,
                channel:channel
            },
            success : function(result) {
                if(result){
                    switch (result.code)
                    {
                        case 200:
                            if(0){
                                text_area_config.setValue(result.activity);
                            }
                            else{
                                var text_area_config_show_json = jsonToStr(JSON.parse(result.activity), null, '\t');
                                text_area_config_json.setValue(text_area_config_show_json);
                                text_area_config.setValue(result.activity);
                            }
                            text_area_log.setValue("get config ok");
                            break;
                        case 201:
                            text_area_log.setValue("error code:201,param error");
                            break;
                        case 202:
                            var log = "error code:202,can not find " + version + ":" + channel;
                            text_area_log.setValue(log);
                            break;
                    }
                }else{
                    text_area_log.setValue("save error");
                }
            }
        });
    }

    function onSave(e) {
        var version = mini.get("combo1").getText();
        var channel = mini.get("combo2").getText();
        var text_area_config = mini.get("text_area_config");
        var text_area_log = mini.get("text_area_log");
        var config = text_area_config.getValue();
        $.ajax({
            url : "/config2",
            dataType: 'json',
            cache: false,
            type : "post",
            data : {
                type:"save",
                version:version,
                channel:channel,
                config:config
            },
            success : function(result) {
                if(result){
                    switch (result.code)
                    {
                        case 200:
                            text_area_log.setValue("save ok");
                            break;
                        case 201:
                            text_area_log.setValue("format error");
                            break;
                        case 202:
                            text_area_log.setValue("redis error");
                            break;
                    }
                }else{
                    alert("error");
                }
            }
        });
    }

    function onCheck(){
        var text_area_config = mini.get("text_area_config");
        var text_area_config_json = mini.get("text_area_config_json");
        var text_area_log = mini.get("text_area_log");

        var activity = text_area_config.getValue();
        try {
            jsonToStr(JSON.parse(activity), null, '\t');
        } catch (err) {
            text_area_log.setValue("format error,please check it again!");
            text_area_config_json.setValue("");
            return;
        }
        var text_area_config_show_json = jsonToStr(JSON.parse(activity), null, '\t');
        text_area_config_json.setValue(text_area_config_show_json);
        text_area_log.setValue("format ok");
    }
</script>

<script src="/javascripts/jquery.js"></script>
<script src="/javascripts/util.js" type="text/javascript"></script>
<script src="/miniui/miniui.js" type="text/javascript"></script>
</html>
